<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
			http://www.springframework.org/schema/cache
        	http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
			http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
			

	<!-- 测试用 -->
	<!-- <bean id="date" class="java.util.Date"></bean> -->

	<!-- 开启注解扫描 (已经在mvc中开启了,仅在测试spring+jpa时使用) -->
	<!-- <context:component-scan base-package="com.axp"/> -->

	<!-- 引入外部文件,关于数据库的配置信息 -->
	<context:property-placeholder location="classpath:db.properties" />

	 <bean id="toolSpring" class="com.axp.util.ToolSpring"></bean>

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driverClassName}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="10" />
		<property name="minIdle" value="10" />
		<property name="maxActive" value="100" />
		
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="600000" />
	</bean>

	<!-- 配置sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 配置连接信息 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置映射文件 配置的是hbm.xml文件所在的目录地址,spring会自动的扫描这些目录,把所有的hbm.xml文件自动映入 -->
		<property name="mappingDirectoryLocations" value="classpath:com/axp/domain" />
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 事务模板 -->
	<tx:advice id="advice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="check*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- aop相关配置 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.axp.service..*(..))"
			id="pointCut" />
		<aop:advisor advice-ref="advice" pointcut-ref="pointCut" />
	</aop:config>
	
	<!--ehcache缓存  -->
	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="shared" value="true"></property>
    	<property name="configLocation" value="classpath:ehcache.xml"/>
    </bean>
    
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
    	<property name="cacheManager" ref="ehcache"/>
   	</bean>
   	
   	<cache:annotation-driven cache-manager="cacheManager"/>
   	
   	<!-- da -->
   	<!-- 商品goods同步  -->
	<bean id="jobGoods" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.axp.timedtask.updateGoodsJob"></property>
        <property name="name" value="queryUpdateGoods"></property>
        <property name="durability" value="true"/>
    </bean>
    <!-- 最后更新时间段增量同步推广订单信息 -->
   <bean id="IncrementGoodsJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.axp.timedtask.IncrementGoodsJob"></property>
        <property name="name" value="queryGoods"></property>
        <property name="durability" value="true"/>
    </bean>
    <!-- 定时删除三个月以上订单,并保存 -->
    <bean id="HistoryGoodsJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.axp.timedtask.HistoryGoodsJob"></property>
        <property name="name" value="HistoryGoods"></property>
        <property name="durability" value="true"/>
    </bean>
    <!-- 21号定时获取更新 结算数据 -->
    <bean id="orderCountJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.axp.timedtask.orderCountJob"></property>
        <property name="name" value="countGoods"></property>
        <property name="durability" value="true"/>
    </bean>
    <!-- 京东商品同步 -->
    <bean id="JDGoodsJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.axp.timedtask.JDGoodsJob"></property>
        <property name="name" value="JDGoods"></property>
        <property name="durability" value="true"/>
    </bean>
    <bean id="JDGoodsJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="JDGoodsJob"></property>
		<property name="cronExpression">
			<value>0 0 5 * * ?</value> 
		</property>
	</bean>
   	<!--商品goods同步 30分钟执行一次 -->
	<bean id="updateGoodsJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="jobGoods"></property>
		<property name="cronExpression">
			<value>0 0 0/2 * * ?</value> 
		</property>
	</bean>
	<!--商品goods同步 30分钟执行一次 -->
   	<bean id="IncrementGoodsJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="IncrementGoodsJob"></property>
		<property name="cronExpression">
			<value>0 0/3 * * * ?</value> 
		</property>
	</bean>
	<!--定期删除,每天执行一次 -->
	<bean id="HistoryGoodsJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="HistoryGoodsJob"></property>
		<property name="cronExpression">
			 <value>0 0 0/3 * * ?</value>  
			
		</property>
	</bean>
	<!-- 21号同步结算 未完成 -->
	<!-- <bean id="orderCountJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="orderCountJob"></property>
		<property name="cronExpression">
			<value>0/10 * * * * ?</value> 
		</property>
	</bean> -->
	
   	<bean id="startQuertz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <!-- 管理trigger -->
        <property name="triggers">
            <list>
                 <!-- <ref bean="updateGoodsJobCronTrigger" /> 
                 <ref bean="IncrementGoodsJobCronTrigger"/>  
             	 <ref bean="JDGoodsJobCronTrigger"/>    -->
            </list>
        </property>
        <property name="jobFactory">
            <bean class="com.axp.timedtask.MyJobFactory" />
        </property>
    </bean>
   	
   	
   	
   	
   	<!-- da -->
   	
   	
 	 
</beans>
