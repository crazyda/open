package com.axp.service;import java.util.List;import java.util.Map;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import com.axp.domain.ReBaseGoods;import com.axp.domain.ReGoodsOfBase;import com.axp.domain.ReShoppingCar;public interface IReShoppingCarService extends IBaseService<ReShoppingCar> {    /**     * 获取购物车列表；     *     * @param request     * @param response     * @return     */    Map<String, Object> getShoppingCarList(HttpServletRequest request, HttpServletResponse response);    /**     * 向购物车中添加数据；     *     * @param request     * @param response     * @return     */    Map<String, Object> putShoppingCar(HttpServletRequest request, HttpServletResponse response);    /**     * 根据userId获取该用户的购物车中所有的对象；     *     * @param userId 用户id；     * @return     */    List<ReShoppingCar> getShoppingCarByUserId(Integer userId);    /**     * 通过给定的商品序号，和规格id的集合，在给定的购物车集合中寻找是否有相同的对象，如果有，那么只做数量的累加；     *     * @param goodsOrder      商品序号；     * @param standardIds     规格id的集合；     * @param shoppingCarList 给定的购物车对象集合；     * @return     */    ReShoppingCar alreadyInShoppingCar(String goodsOrder, List<Integer> standardIds, List<ReShoppingCar> shoppingCarList);    /**     * 编辑购物车对象的数量；     *     * @param request     * @param response     * @return     */    Map<String, Object> updateShoppingCar(HttpServletRequest request, HttpServletResponse response);    /**     * 删除已经存在的购物车对象；     *     * @param request     * @param response     * @return     */    Map<String, Object> removeShoppingCar(HttpServletRequest request, HttpServletResponse response);    /**     * 保存购物车对象到数据库；     *     * @param userId              用户的id值；     * @param goodsOrder          商品的序号（商城前缀+商品id）     * @param number              加入购物车的商品数量；     * @param detailIds           商品对应的规格id，有几个就写几个，最多三个；     * @param hashStandardDetails 是否有商品规格；     * @return     */    ReShoppingCar saveShoppingCar(Integer userId, String goodsOrder, Integer number, List<Integer> detailIds, Boolean hashStandardDetails,Boolean isTeam);    /**     * 这个方法是给立即购买业务逻辑调用的；     *     * @param userId     用户的id值；     * @param goodsOrder 商品的序号（商城前缀+商品id）     * @param number     加入购物车的商品数量；     * @param detailIds  商品对应的规格id，有几个就写几个，最多三个；     * @param basePath   及基础路径；     * @return     */    ReShoppingCar saveShoppingCar(Integer userId, String goodsOrder, Integer number, List<Integer> detailIds, String basePath,Boolean isTeam,String isGame);    /**     * 获取某个用户购物车中的某个商品的购买数量；     *     * @param goodsOrder 商品序列号；     * @param userId     用户id值；     * @return     */    Integer getNumberOfGoodsInShoppingCar(String goodsOrder, Integer userId);}