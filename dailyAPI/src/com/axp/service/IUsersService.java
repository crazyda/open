package com.axp.service;import java.util.Map;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import com.axp.domain.AdminUser;import com.axp.domain.Users;public interface IUsersService extends IBaseService<Users> {	Map<String, Object> loginByUsernameAndPassword(HttpServletRequest request,String username,			String password, String channelId,String app,String tokenId,String captcha,String Invitecode,String os);	/**	 * 用户注册的业务逻辑；	 * 根据用户名，密码，以及短信验证信息进行注册；	 * @param username 用户名	 * @param password 密码	 * @param captcha 短信验证码	 * @return	 */	Map<String, Object> register(String loginname,String username, String password,			String captcha, String invitecode,String headImgae,String basePath);	Map<String, Object> getBaseInfo(Integer userId);			/**	 * 根据手机号创建用户	 * @return	 */	 Users createUserByPhoneNumber(String phoneNumber,String Invitecode);		/**	 * 第三方登录	 * 1，如果有用户就查找这个用户；	 * 2，如果没有用户就创造用户；	 * @param openId	 * @return	 */	Users loginByThirdMethod(String openId,String unionId,String app);	/**	 * 获取用户信息	 * @param userId	 * @param basePath	 * @return	 */	public Map<String,Object> getUserMap(Integer userId,String basePath);		/**	 * 获取用户信息	 * @param userId	 * @param basePath	 * @return	 */	public Map<String,Object> getUserMap(String adminuserId,String sellerId,Integer userId,String basePath,Integer zoneid,String appVersion);	Map<String, Object> changePassword(Integer userId, String oldpwd,			String newpwd);	void singleSignOn(Users user, String channelId,String tokenId);		public Map<String,Object> putAddress(HttpServletRequest request, HttpServletResponse response);		public Map<String,Object> getAddressList(HttpServletRequest request, HttpServletResponse response);		public Map<String,Object> getDefaultAddress(HttpServletRequest request, HttpServletResponse response);		public Map<String,Object> setDefaultAddress(HttpServletRequest request, HttpServletResponse response);		public Map<String,Object> updateAddress(HttpServletRequest request, HttpServletResponse response);		public Map<String,Object> deleteAddress(HttpServletRequest request, HttpServletResponse response);	public Map<String, Object> getFansList(HttpServletRequest request,HttpServletResponse response);	public Map<String, Object> bangdingContacts(HttpServletRequest request,HttpServletResponse response);	Map<String, Object> getExemptList(HttpServletRequest request,HttpServletResponse response);	Map<String, Object> feedback(HttpServletRequest request,HttpServletResponse response);		Map<String, Object> feedbackTips (HttpServletRequest request ,HttpServletResponse response);//意见反馈小提示	Map<String, Object> changeBaseInfo(HttpServletRequest request,HttpServletResponse response);	void userInstallationProtocol(HttpServletRequest request);	void seeStrategy(HttpServletRequest request);	void about(HttpServletRequest request);	Map<String, Object> forgetPassword(String confirmpwd, String newpwd,			String phone, String captcha);	void notReceivedIdentifyingCode(HttpServletRequest request);	void registorUsersMonitor(Users user);		Map<String, Object> checkCaptcha(String phoneNumber, String captcha,String Invitecode);		Users findUserByPhoneNumber(String phoneNumber);	Map<String, Object> getMonitorAccount(HttpServletRequest request);		Map<String, Object> getCheckPhone(HttpServletRequest request);			Map<String, Object> bindingPhone(HttpServletRequest request);	Map<String, Object> getUsersMoney(HttpServletRequest request);		Map<String, Object> applyWithdrawals(HttpServletRequest request);	Map<String, Object> withdrawals(HttpServletRequest request);		Map<String, Object> getwithdrawalsInfoForPay(HttpServletRequest request);	Map<String, Object> getwithdrawalsInfo(HttpServletRequest request);		boolean	findUserIsMyFans(Users users,String invitecode);		/**	 * 获取通讯录邀请发送短信的默认短信内容	 */	Map<String, Object> getDefaultMsg(HttpServletRequest request, HttpServletResponse response);		/**	 * 上传日志 IOS ANDROID	 */	Map<String, Object> uploadLog(HttpServletRequest request,HttpServletResponse response);		/**	 * 修改密码 商家版	 * @param confirmpwd	 * @param newpwd	 * @param phone	 * @param captcha	 * @return	 */	Map<String,Object> forgetPasswordFromSeller(String confirmpwd, String newpwd, String phone, String captcha);		/**	 * 获取用户基本信息 返回三个字段	 * @param request	 * @param response	 * userId  用户id   portraitUri  头像 name  用户名	 * @return	 */	Map<String, Object> getUserInfo(HttpServletRequest request,HttpServletResponse response);			public Map<String, Object> getFansList2(HttpServletRequest request,			HttpServletResponse response);		Map<String, Object> getOrderStatusNum(HttpServletRequest request, HttpServletResponse response);		/**	 * 创建群 	 * @param request	 * @param response	 * @return	 */	Map<String,Object> group(HttpServletRequest request,HttpServletResponse response);			public Map<String,Object> getJoinGroup(HttpServletRequest request,HttpServletResponse response);	/**	 * 供微信公众号,验证是否有这个用户	 * @param request	 * @param response	 * @return	 */	Map<String, Object> wxusers(HttpServletRequest request,			HttpServletResponse response);	/**	 * 用户签到功能	 * @param request	 * @param response	 * @return	 */	Map<String, Object> userBySignCalc(HttpServletRequest request,			HttpServletResponse response);	/**	 * 用户签到页面	 * @param request	 * @param response	 * @return	 */	Map<String, Object> signCalc(HttpServletRequest request,			HttpServletResponse response);	/**	 * 幸运抽奖页面信息	 * @param request	 * @param response	 * @return	 */	Map<String, Object> getPrizeInfo(HttpServletRequest request,			HttpServletResponse response);	/**	 * 中奖记录	 * @param request	 * @param response	 * @return	 */	Map<String, Object> getRecordList(HttpServletRequest request,			HttpServletResponse response);	/**	 * 幸运抽奖页面中点击了某个牌子	 * @param request	 * @param response	 * @return	 */	Map<String, Object> openCards_1(HttpServletRequest request,			HttpServletResponse response);	/**	 * 收益情况	 * @param request	 * @param response	 * @return	 */	Map<String, Object> profit(Integer id,HttpServletRequest request,			HttpServletResponse response);	/**	 * web 申请提现	 * @param id	 * @param request	 * @param response	 */	String getCheckPhone(Integer id, HttpServletRequest request,			HttpServletResponse response);	/**	 *	提交提现信息	 * @param request	 * @param response	 */	Map<String,Object> webWithdrawals(Integer id,HttpServletRequest request, HttpServletResponse response);	/**	 * web 获取需要验证的信息	 * @param id	 * @param request	 * @param response	 * @return	 */	int doCash(Integer id, HttpServletRequest request,			HttpServletResponse response);	/**	 * 小程序用户登录	 * @param response	 * @param request	 */	Map<String,Object> xcxLogin(HttpServletResponse response, HttpServletRequest request);				public void sellerSingleSignOn(AdminUser au, String channelId,String tokenId);	/**	 * 实时数据列表展示	 * @param request	 * @param response	 * @param type 1 数据 2 列表	 * @return	 */	Map<String, Object> getBounsRealTime(HttpServletRequest request,			HttpServletResponse response,Integer type);	/**	 * 实时数据可视化,有地图的	 * @param request	 * @param response	 * @param valueOf	 * @return	 */	Map<String, Object> getSettlement(HttpServletRequest request,			HttpServletResponse response, Integer valueOf);	/**	 * 	 * 转动球星的用户展示	 * @param request	 * @param response	 * @param valueOf	 * @return	 */	Map<String, Object> getRotateUsers(HttpServletRequest request,			HttpServletResponse response, Integer valueOf);	/**	 * 	 * 获取海报二维码	 * @param request	 * @param response	 * @return	 */	Map<String, Object> getCard(HttpServletRequest request,			HttpServletResponse response);	/**	 * 	 * 获取用户token	 * @param request	 * @param response	 * @param user	 * @return	 */	Map<String, Object> getToken(HttpServletRequest request,			HttpServletResponse response, Users user);	/**	 * 判断是否是商家,	 * @param userId	 * @return	 */	public Map<String,Object> isSeller(Integer userId);	/**	 * 单独生成二维码接口	 * @param request	 * @param response	 * @return	 */	Map<String, Object> getUserToken(HttpServletRequest request, HttpServletResponse response);			/**	 * 用户发送图文信息	 * @param response	 * @param request	 * @return	 */	Map<String, Object> publishInfo(HttpServletResponse response, HttpServletRequest request);	/**	 * 获取用户发表的图文信息	 * @param response	 * @param request	 * @return	 */	Map<String, Object> getPublishInfo(HttpServletResponse response, HttpServletRequest request);	/**	 * 用户点赞或取消赞	 * @param response	 * @param request	 * @return	 */	Map<String, Object> UpOrDown(HttpServletResponse response, HttpServletRequest request);	/**	 * 用户收藏或者关注信息	 * @param response	 * @param request	 * @return	 */	Map<String, Object> isConcern(HttpServletResponse response, HttpServletRequest request);	/**	 * 阅读用户信息文章, 赞赏用户,给积分	 * @param response	 * @param request	 * @return	 */	Map<String, Object> payScore(HttpServletResponse response, HttpServletRequest request);	/**	 * 回复消息	 * @param response	 * @param request	 * @return	 */	Map<String, Object> reply(HttpServletResponse response, HttpServletRequest request);	}