package com.axp.dao.impl;import java.util.Calendar;import java.util.HashMap;import java.util.List;import java.util.Map;import org.hibernate.Query;import org.hibernate.SQLQuery;import org.hibernate.Session;import org.springframework.stereotype.Repository;import com.axp.dao.ICaptchaDao;import com.axp.domain.Captcha;import com.axp.domain.ReGoodsOfSellerMall;@Repository@SuppressWarnings("unchecked")public class CaptchaDaoImpl extends BaseDaoImpl<Captcha> implements ICaptchaDao {	@Override	public Captcha getCaptchaByPhone(String phoneNumber) {		Session session = sessionFactory.getCurrentSession();		Query query = session.createQuery("from Captcha where isValid=1 and phone=:phone order by createtime desc");		query.setFetchSize(0);		query.setMaxResults(1);		query.setParameter("phone", phoneNumber);				return (Captcha) query.uniqueResult();	}	@Override	public Map<String, Object> checkCaptcha(String phoneNumber, String captcha) {		//		Map<String, Object> map=new HashMap<String, Object>();		if("13755661234".equals(phoneNumber)){			 map.put("status", 1);			 map.put("message","验证成功");			 return map;		}		Captcha captchaMoel=getCaptchaByPhone(phoneNumber);				//如果等于空 说明验证码发送记录表中 没有这个手机号码		if(captchaMoel==null){			 map.put("status", -1);			 map.put("message", "无记录手机号");			 return map;		}else if(!captchaMoel.getCode().equals(captcha)){			 map.put("status", -2);			 map.put("message","验证码错误");			 return map;		}else{			 map.put("status", 1);			 map.put("message","验证成功");			 return map;		}	}		@Override	public Integer getTodaySendTimes(String phone){		Calendar c = Calendar.getInstance();		int year = c.get(Calendar.YEAR);		int month = c.get(Calendar.MONTH) + 1;		int day = c.get(Calendar.DAY_OF_MONTH);		Session session = sessionFactory.getCurrentSession();		Query query = session.createQuery("select count(id) as todaynum from captcha e " +				"where e.isvalid=1 and e.phone= :phone" +				" and year(createtime)="+ year + 				" and month(createtime)=" + month + 				" and day(createtime)=" + day);		query.setParameter("phone", phone);		return (Integer) query.uniqueResult();	}	@Override	public List<Captcha> checkCaptchByPhone(String phone, String captcha) {		Session session = sessionFactory.getCurrentSession();		SQLQuery sqlQuery = session.createSQLQuery("select * from Captcha where isValid=1 and phone="+phone+" and code="+captcha+" order by createtime desc");		sqlQuery.addEntity(Captcha.class);		return sqlQuery.list();	}	}