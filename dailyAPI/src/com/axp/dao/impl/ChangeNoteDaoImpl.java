package com.axp.dao.impl;import java.util.HashMap;import java.util.Map;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Repository;import com.axp.dao.DateBaseDAO;import com.axp.dao.IChangeNoteDao;import com.axp.domain.ChangeNote;import com.axp.domain.ChangeOrder;import com.axp.domain.Users;import com.axp.util.QueryModel;@Repository public class ChangeNoteDaoImpl extends BaseDaoImpl<ChangeNote> implements IChangeNoteDao {	@Autowired	DateBaseDAO dateBaseDAO;		@Override	public Map<String, Object> myChangeList(Users users) {				QueryModel model=new QueryModel();		model.combEquals("isValid", 1);		model.combPreEquals("sendUsers.id", users.getId(),"userId");		//帖子数		Integer noteCount = dateBaseDAO.findCount(ChangeNote.class, model);				model.clearQuery();				model.combEquals("isValid", 1);		model.combPreEquals("inviteUsers.id", users.getId(),"userId");		model.combCondition("inviteStatus!="+ChangeOrder.orderStatus_yi_shan_chu);		model.combCondition("(status="+ChangeOrder.UNACCEPTED+" or status="+ChangeOrder.REFUSE+")");		//我发起的		Integer inviteCount = dateBaseDAO.findCount(ChangeOrder.class, model);				model.clearQuery();				model.combEquals("isValid", 1);		model.combPreEquals("acceptUsers.id", users.getId(),"userId");		model.combCondition("(status="+ChangeOrder.UNACCEPTED+" or status="+ChangeOrder.REFUSE+")");		model.combCondition("acceptStatus!="+ChangeOrder.orderStatus_yi_shan_chu);		//邀请我的		Integer acceptCount = dateBaseDAO.findCount(ChangeOrder.class, model);				model.clearQuery();		model.combEquals("isValid", 1);		model.combCondition(" (status="+ChangeOrder.ACCEPTED+" or status="+ChangeOrder.SUCCESS+")");		model.combCondition(" (acceptUsers.id="+users.getId()+" or inviteUsers.id="+users.getId()+")");		Integer trading= dateBaseDAO.findCount(ChangeOrder.class, model);				Map<String, Object> map=new HashMap<String, Object>();		map.put("noteCount", noteCount);		map.put("inviteCount", inviteCount);		map.put("acceptCount", acceptCount);		map.put("trading", trading);		return map;	}}