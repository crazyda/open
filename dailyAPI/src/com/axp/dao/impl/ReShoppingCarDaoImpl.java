package com.axp.dao.impl;import java.util.List;import com.axp.domain.ReBaseGoods;import com.axp.util.StringUtil;import org.hibernate.Query;import org.hibernate.Session;import org.springframework.stereotype.Repository;import com.axp.dao.IReShoppingCarDao;import com.axp.domain.ReShoppingCar;@Repository@SuppressWarnings("unchecked")public class ReShoppingCarDaoImpl extends BaseDaoImpl<ReShoppingCar> implements IReShoppingCarDao {    @Override    public List<ReShoppingCar> getShoppingCarByUserId(Integer userId) {        Session session = sessionFactory.getCurrentSession();        Query query = session.createQuery("from ReShoppingCar where isValid=1 and user.id=:userId order by id desc");        query.setParameter("userId", userId);        return query.list();    }    /**     * 根据购物车ID获取所有的购物车     *     * @param str     * @return     */    public List<Integer> getSellerIdByShoppingCar(String str) {        //StringBuffer sb = new StringBuffer("select distinct seller.id from ReShoppingCar where id in ("+str+")");        StringBuffer sb = new StringBuffer("select distinct seller.id from ReShoppingCar where id in (" + str + ")");        Session session = sessionFactory.getCurrentSession();        Query createQuery = session.createQuery(sb.toString());        return createQuery.list();    }    /**     * 获取购物车集合     */    public List<ReShoppingCar> getReShoppingCar(String string) {        StringBuffer sb = new StringBuffer("from ReShoppingCar where id in (" + string + ")");        Session session = sessionFactory.getCurrentSession();        Query createQuery = session.createQuery(sb.toString());        return createQuery.list();    }    @Override    public Integer getNumberOfGoodsInShoppingCar(String goodsOrder, Integer userId) {        Session session = sessionFactory.getCurrentSession();        Query query = session.createQuery("from ReShoppingCar where isValid=1 and user.id=:userId and goodsOrder=:goodsOrder");        List list = query.setParameter("userId", userId).setParameter("goodsOrder", goodsOrder).list();        return list.size();    }}